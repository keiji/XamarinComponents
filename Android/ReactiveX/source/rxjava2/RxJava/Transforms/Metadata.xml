<metadata>
    <add-node
        path="/api/package[@name='io.reactivex.internal.observers']/class[@name='BasicFuseableObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onNext" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
        <method abstract="true" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>

    <attr
        path="/api/package[@name='io.reactivex.internal.operators.completable']/class[@name='CompletableAmb']/method[@name='subscribeActual' and count(parameter)=1 and parameter[1][@type='io.reactivex.CompletableObserver']]"
        name="visibility"
        >
        protected
    </attr>

    <add-node
        path="/api/package[@name='io.reactivex.internal.observers']/class[@name='BasicIntQueueDisposable']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.internal.observers']/class[@name='BasicQueueDisposable']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>

    <add-node
        path="/api/package[@name='io.reactivex.observers']/class[@name='DefaultObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onNext" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>

    <attr
        path="/api/package[@name='io.reactivex.internal.operators.completable']/class[@name='CompletableConcat']/method[@name='subscribeActual' and count(parameter)=1 and parameter[1][@type='io.reactivex.CompletableObserver']]"
        name="visibility"
        >
        protected
    </attr>
    <attr
        path="/api/package[@name='io.reactivex.internal.operators.completable']/class[@name='CompletableConcatArray']/method[@name='subscribeActual' and count(parameter)=1 and parameter[1][@type='io.reactivex.CompletableObserver']]"
        name="visibility"
        >
        protected
    </attr>

    <add-node
        path="/api/package[@name='io.reactivex.subjects']/class[@name='Subject']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onNext" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>

    <attr
        path="/api/package/class/method[@name='subscribeActual']"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package/class/method[@name='isDisposed']"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package/class/method[@name='dispose']"
        name="visibility"
        >
        public
    </attr>

    <add-node
        path="/api/package[@name='io.reactivex.internal.observers']/class[@name='BlockingBaseObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onNext" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.observers']/class[@name='DisposableObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onNext" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.observers']/class[@name='ResourceObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onNext" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.internal.observers']/class[@name='DeferredScalarObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onNext" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.internal.observers']/class[@name='QueueDrainObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onNext" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>


    <add-node
        path="/api/package[@name='io.reactivex.internal.subscriptions']/class[@name='BasicIntQueueSubscription']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.internal.subscribers']/class[@name='BasicFuseableSubscriber']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.internal.subscriptions']/class[@name='BasicQueueSubscription']"
        >
        <method abstract="false" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.internal.subscriptions']/class[@name='DeferredScalarSubscription']/method[@name='poll' and count(parameter)=0]"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.internal.subscribers']/class[@name='BasicFuseableConditionalSubscriber']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.internal.operators.flowable']/class[@name='FlowableGroupBy']"
        >
        <method abstract="false" deprecated="not deprecated" final="false" name="poll" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
        </method>
    </add-node>


    <attr
        path="/api/package[@name='io.reactivex.internal.operators.flowable']/class[@name='FlowableGroupBy.GroupBySubscriber']/method[@name='poll' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='io.reactivex.subscribers']/class[@name='TestSubscriber']/method[@name='assertSubscribed' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='io.reactivex.subscribers']/class[@name='TestSubscriber']/method[@name='assertNotSubscribed' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='io.reactivex.observers']/class[@name='TestObserver']/method[@name='assertNotSubscribed' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='io.reactivex.observers']/class[@name='TestObserver']/method[@name='assertSubscribed' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>


    <add-node
        path="/api/package[@name='io.reactivex.internal.subscribers']/class[@name='BasicFuseableConditionalSubscriber']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="tryOnNext" jni-signature="(Ljava/lang/Object;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="p0" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>

    <attr
        path="/api/package[@name='io.reactivex.internal.schedulers']/class[@name='ScheduledDirectTask']/method[@name='call' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='io.reactivex.internal.util']/class[@name='ArrayListSupplier']/method[@name='call' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='io.reactivex.internal.util']/class[@name='HashMapSupplier']/method[@name='call' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>

    <add-node
        path="/api/package[@name='io.reactivex.observers']/class[@name='DisposableMaybeObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onSuccess" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.observers']/class[@name='DisposableSingleObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onSuccess" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.observers']/class[@name='ResourceMaybeObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onSuccess" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='io.reactivex.observers']/class[@name='ResourceSingleObserver']"
        >
        <method abstract="true" deprecated="not deprecated" final="false" name="onSuccess" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="t" type="T" jni-type="TT;">
            </parameter>
        </method>
    </add-node>

    <remove-node
        path="/api/package[@name='io.reactivex.internal.util']/class[@name='SorterFunction']"
        />
    <remove-node
        path="/api/package[@name='io.reactivex.internal.util']/class[@name='MergerBiFunction']"
        />
    <remove-node
        path="/api/package[@name='io.reactivex.internal.util']/class[@name='ListAddBiConsumer']"
        />

    <remove-node
        path="/api/package[@name='io.reactivex.internal.util']/class[@name='ArrayListSupplier']"
        />
    <remove-node
        path="/api/package[@name='io.reactivex.internal.util']/class[@name='ArrayListSupplier']/method[@name='apply' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
        />
    <remove-node
        path="/api/package[@name='io.reactivex.internal.util']/class[@name='HashMapSupplier']"
        />


</metadata>
